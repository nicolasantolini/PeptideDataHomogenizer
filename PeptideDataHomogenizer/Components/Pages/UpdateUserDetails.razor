@page "/update-user-details"
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Authorization
@using PeptideDataHomogenizer.Data
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<div class="update-user-container">
    <h1 class="page-title">Update Your Details</h1>

    @if (currentUser != null)
    {
        <div class="user-form-card">
            <div class="form-group">
                <label for="firstName">First Name</label>
                <input id="firstName" @bind="currentUser.FirstName"
                       class="form-input" placeholder="Enter your first name" />
            </div>

            <div class="form-group">
                <label for="lastName">Last Name</label>
                <input id="lastName" @bind="currentUser.LastName"
                       class="form-input" placeholder="Enter your last name" />
            </div>

            <div class="form-group">
                <label for="title">Title (Optional)</label>
                <InputSelect id="title" @bind-Value="currentUser.Title" class="form-input">
                    <option disabled value="">Select Title</option>
                    <option value="Dr.">Dr.</option>
                    <option value="Professor">Professor</option>
                    <option value="Master">Master</option>
                    <option value="PhD">PhD</option>
                    <option value="Bachelor">Bachelor</option>
                    <option value=""> - </option>
                </InputSelect>
            </div>

            <div class="form-actions">
                <button @onclick="HandleSave" class="save-button">
                    Save Changes
                </button>
                <button @onclick="HandleCancel" class="cancel-button">
                    Cancel
                </button>
            </div>

            @if (!string.IsNullOrEmpty(statusMessage))
            {
                <div class="status-message @(isError ? "error" : "success")">
                    @statusMessage
                </div>
            }
        </div>
    }
    else
    {
        <div class="loading-message">Loading your information...</div>
    }
</div>

@code {
    private ApplicationUser? currentUser;
    private string statusMessage = string.Empty;
    private bool isError = false;

    protected override async Task OnInitializedAsync()
    {
        currentUser = await UserManager.GetUserAsync(
            (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User);
    }

    private async Task HandleSave()
    {
        try
        {
            var result = await UserManager.UpdateAsync(currentUser);
            if (result.Succeeded)
            {
                statusMessage = "Your details have been updated successfully!";
                isError = false;
            }
            else
            {
                statusMessage = "Error: " + string.Join(" ", result.Errors.Select(e => e.Description));
                isError = true;
            }
        }
        catch (Exception ex)
        {
            statusMessage = "Error: " + ex.Message;
            isError = true;
        }
    }

    private void HandleCancel()
    {
        NavigationManager.NavigateTo("/");
    }
}

<style>
    /* Base Styles */
    .update-user-container {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
        max-width: 600px;
        margin: 2rem auto;
        padding: 0 1.5rem;
        color: #333;
    }

    .page-title {
        font-weight: 500;
        font-size: 1.8rem;
        margin-bottom: 2rem;
        color: #1a1a1a;
    }

    /* Form Card */
    .user-form-card {
        background: white;
        border-radius: 8px;
        box-shadow: 0 1px 2px rgba(0,0,0,0.1);
        padding: 2rem;
    }

    /* Form Elements */
    .form-group {
        margin-bottom: 1.5rem;
    }

    label {
        display: block;
        margin-bottom: 0.5rem;
        font-size: 0.9rem;
        font-weight: 500;
        color: #444;
    }

    .form-input {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 1rem;
        transition: border 0.2s ease;
    }

        .form-input:focus {
            outline: none;
            border-color: #1a73e8;
            box-shadow: 0 0 0 2px rgba(26,115,232,0.2);
        }

    /* Buttons */
    .form-actions {
        display: flex;
        gap: 1rem;
        margin-top: 2rem;
    }

    .save-button, .cancel-button {
        padding: 0.75rem 1.5rem;
        border-radius: 4px;
        font-size: 0.9rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .save-button {
        background-color: #1a73e8;
        color: white;
        border: none;
    }

        .save-button:hover {
            background-color: #1765cc;
        }

    .cancel-button {
        background-color: white;
        color: #1a73e8;
        border: 1px solid #dadce0;
    }

        .cancel-button:hover {
            background-color: #f8f9fa;
        }

    /* Status Messages */
    .status-message {
        margin-top: 1.5rem;
        padding: 0.75rem 1rem;
        border-radius: 4px;
        font-size: 0.9rem;
    }

        .status-message.success {
            background-color: #e6f4ea;
            color: #137333;
        }

        .status-message.error {
            background-color: #fce8e6;
            color: #c5221f;
        }

    .loading-message {
        text-align: center;
        padding: 2rem;
        color: #666;
    }
</style>